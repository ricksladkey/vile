: $Id: ada.key,v 1.2 2011/04/10 23:14:07 tom Exp $
abort
abs
all
and
begin
body
case
declare
do
else
elsif
end
entry
exception
exit
for
function
generic
if
in
is
loop
mod
new
not
null
or
others
out
package
pragma
procedure
protected
rem
renames
reverse
select
separate
task
then
until
use
when
while
with
xor
:
accept:Ident2
delay:Ident2
goto:Ident2
raise:Ident2
requeue:Ident2
return:Ident2
terminate:Ident2
:
abstract:Type
access:Type
aliased:Type
array:Type
at:Type
constant:Type
delta:Type
digits:Type
limited:Type
of:Type
private:Type
range:Type
record:Type
subtype:Type
tagged:Type
type:Type
:
: predefined attributes
.table ada_attribute
.default Type
access
address
adjacent
aft
alignment
base
bit_order
body_version
callable
caller
ceiling
class
component_size
compose
constrained
copy_sign
count
definite
delta
denorm
digits
exponent
external_tag
first
first_bit
floor
fore
fraction
identity
image
input
last
last_bit
leading_bit
leading_part
length
machine
machine_emax
machine_emin
machine_mantissa
machine_overflows
machine_radix
machine_rounds
max
max_size
min
model
modulus
output
partition_id
pos
position
pred
range
read
remainder
round
rounding
safe_first
safe_last
scale
scaling
signed_zeros
size
small
storage_pool
storage_size
succ
tag
terminated
truncation
unbiased_rounding
unchecked_access
val
valid
value
version
wide_image
wide_value
wide_width
width
write
